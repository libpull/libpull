From 030294c0ad93955f9d12613ea32b67d444f69641 Mon Sep 17 00:00:00 2001
From: Antonio Langiu <antonio.langiu@studenti.polito.it>
Date: Wed, 6 Jun 2018 12:58:33 +0200
Subject: [PATCH] Add watchdog for ECC verification

---
 dtls.c       | 18 +++++++++++++++++-
 dtls_debug.h |  4 ++++
 session.h    |  4 ++++
 3 files changed, 25 insertions(+), 1 deletion(-)

diff --git a/dtls.c b/dtls.c
index fc7016a..07f9b0c 100644
--- a/dtls.c
+++ b/dtls.c
@@ -29,6 +29,9 @@
 #include <stdlib.h>
 #include "global.h"
 #endif /* WITH_CONTIKI */
+#ifdef WITH_CONTIKI_NG
+#include "platform_headers.h"
+#endif /* WITH_CONTIKI_NG */
 #ifdef HAVE_INTTYPES_H
 #define __STDC_FORMAT_MACROS
 #include <inttypes.h>
@@ -3531,12 +3534,19 @@ handle_handshake(dtls_context_t *ctx, dtls_peer_t *peer, session_t *session,
     dtls_info("Added packet for reordering\n");
     return 0;
   } else if (dtls_uint16_to_int(hs_header->message_seq) == peer->handshake_params->hs_state.mseq_r) {
+#ifdef WITH_CONTIKI_NG
+      WATCHDOG_STOP();
+#endif /* WITH_CONTIKI_NG */
     /* Found the expected packet, use this and all the buffered packet */
     int next = 1;
 
     res = handle_handshake_msg(ctx, peer, session, role, state, data, data_length);
-    if (res < 0)
+    if (res < 0) {
+#ifdef WITH_CONTIKI_NG
+        WATCHDOG_START();
+#endif /* WITH_CONTIKI_NG */
       return res;
+    }
 
     /* We do not know in which order the packet are in the list just search the list for every packet. */
     while (next && peer->handshake_params) {
@@ -3550,6 +3560,9 @@ handle_handshake(dtls_context_t *ctx, dtls_peer_t *peer, session_t *session,
           next = 1;
           res = handle_handshake_msg(ctx, peer, session, role, peer->state, node->data, node->length);
           if (res < 0) {
+#ifdef WITH_CONTIKI_NG
+    WATCHDOG_START();
+#endif /* WITH_CONTIKI_NG */
             return res;
           }
 
@@ -3559,6 +3572,9 @@ handle_handshake(dtls_context_t *ctx, dtls_peer_t *peer, session_t *session,
         }
       }
     }
+#ifdef WITH_CONTIKI_NG
+    WATCHDOG_START();
+#endif /* WITH_CONTIKI_NG */
     return res;
   }
   assert(0);
diff --git a/dtls_debug.h b/dtls_debug.h
index 80e56d6..1b1f9c2 100644
--- a/dtls_debug.h
+++ b/dtls_debug.h
@@ -28,7 +28,11 @@
 # ifndef DEBUG
 #  define DEBUG DEBUG_PRINT
 # endif /* DEBUG */
+#ifdef WITH_CONTIKI_NG
+#include "ipv6/uip-debug.h"
+#else
 #include "net/ip/uip-debug.h"
+#endif /* WITH_CONTIKI_NG */
 
 #ifdef CONTIKI_TARGET_MBXXX
 extern char __Stack_Init, _estack;
diff --git a/session.h b/session.h
index 8cd8a93..f6b5707 100644
--- a/session.h
+++ b/session.h
@@ -23,7 +23,11 @@
 #include "global.h"
 
 #ifdef WITH_CONTIKI
+#ifdef WITH_CONTIKI_NG
+#include "ipv6/uip.h"
+#else
 #include "ip/uip.h"
+#endif /* WITH_CONTIKI_NG */
 typedef struct {
   unsigned char size;
   uip_ipaddr_t addr;
-- 
2.13.1

